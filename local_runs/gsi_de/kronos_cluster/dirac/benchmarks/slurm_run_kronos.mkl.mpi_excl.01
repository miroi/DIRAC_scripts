#!/bin/bash
#
#SBATCH --job-name=mpiMKL

#SBATCH --nodes=1
#SBATCH --exclusive

##  partition (queue)
##SBATCH -p long
##SBATCH -p main
##SBATCH -p debug
#SBATCH -p hpc_debug

## max. execution time
#SBATCH -t 0-12:30:00
##SBATCH -t 0-0:20:00

## stdout/stderr output file
#SBATCH -o log_slurm_job.%j.%N.std_out_err

## mail
#SBATCH --mail-user=M.Ilias@gsi.de 
#SBATCH --mail-type=ALL

 
echo Job user is $SLURM_JOB_USER and his job $SLURM_JOB_NAME has assigned ID $SLURM_JOBID
echo This job was submitted from the computer $SLURM_SUBMIT_HOST
echo and from the home directory:
echo $SLURM_SUBMIT_DIR
echo
echo It is running on the cluster compute node:
echo $SLURM_CLUSTER_NAME
echo and is employing $SLURM_JOB_NUM_NODES node/nodes:
echo $SLURM_JOB_NODELIST
echo The job requests $SLURM_CPUS_ON_NODE CPU per task.

module use /cvmfs/it.gsi.de/modulefiles/
echo "modules at disposal:"
module avail
echo
module unload compiler/intel/12.1
module unload compiler/intel/15.0
module unload compiler/intel/16.0
# all dirac.x is on Intel 17.0
module load compiler/intel/17.0
echo "loaded modules:"
module list

echo -e "\nRunning on host `hostname`"
echo -e "Time is `date` \n"
echo -e "\nMy PATH=$PATH\n"

# CPU model, total numer of CPUs, number of allocated CPUs
echo -e "The node's CPU \c"; cat /proc/cpuinfo | grep 'model name' | uniq
NPROCS=`cat /proc/cpuinfo | grep processor | wc -l`
echo "This node has $NPROCS CPUs available for EXCLUSIVE job."
#
#echo "(i) This node has SLURM_CPUS_ON_NODE=$SLURM_CPUS_ON_NODE CPUs allocated for SLURM calculations."
#echo "(ii) This node has SLURM_JOB_CPUS_PER_NODE=$SLURM_JOB_CPUS_PER_NODE CPUs allocated for SLURM calculations."

echo -e "\n The memory situation at the node (in GB)"
free -t -g
echo

## set internal OpenMP parallelization for MKL - Slurm CPU count
#export MKL_NUM_THREADS=$SLURM_CPUS_ON_NODE

# no OpenMP multithreading, use full OpenMPI for dirac.x
#export MKL_NUM_THREADS=1
echo -e  "\nInternal MKL parallelization upon SLURM CPU count, MKL_NUM_THREADS=$MKL_NUM_THREADS\n"
export OMP_NUM_THREADS=1
export MKL_DYNAMIC="FALSE"
export OMP_DYNAMIC="FALSE"

export DIRAC=/lustre/nyx/ukt/milias/work/software/dirac/production_trunk
export BUILD=$DIRAC/build_openmpi_intel17_mkl_i8_xh
#export BUILD=$DIRAC/build_openmpi_intel17_openblas_i8_xh

# My OpenMPI-Intel17 installation
export PATH=/lustre/nyx/ukt/milias/bin/openmpi-2.0.1-intel-17/bin:$PATH
export LD_LIBRARY_PATH=/lustre/nyx/ukt/milias/bin/openmpi-2.0.1-intel-17/lib:$LD_LIBRARY_PATH

# My OpenBLAS-Intel17-i8 installation
#export LD_LIBRARY_PATH=/lustre/nyx/ukt/milias/work/software/openblas/OpenBLAS:$LD_LIBRARY_PATH

# set MPI launcher
unset DIRAC_MPI_COMMAND
#export DIRAC_MPI_COMMAND="mpirun -np $SLURM_CPUS_ON_NODE"
#xport DIRAC_MPI_COMMAND="mpirun"

export PAM=$BUILD/pam
export BASDIR=$DIRAC/basis_dalton:$DIRAC/basis:$DIRAC/basis_ecp

echo -e "\n ldd $BUILD/dirac.x:"
ldd $BUILD/dirac.x
echo

echo -e "Python -v :\c"; python -V
echo -e "cmake ? which cmake = \c"; which cmake
echo -e "ctest ? which ctest = \c"; which ctest
echo -e "ctest --version \c"; ctest --version
echo -e "mpirun ? which mpirun  = \c"; which mpirun
echo -e "mpirun --version \c"; mpirun --version
echo

export DIRAC_TMPDIR=/lustre/nyx/ukt/milias/scratch
echo -e "\nDIRAC scratch directory space, $DIRAC_TMPDIR"
df -h $DIRAC_TMPDIR/.
echo
echo -e "For comparison, df -h /tmp/."; df -h /tmp

# for running jobs from your homedir, use ...
cd $SLURM_SUBMIT_DIR

echo -e "\n Current directory where this SLURM job is running `pwd`"
echo " It has the disk space of (df -h) :"
df -h .
echo

#$PAM --mw=320 --aw=1200 --noarch --inp=$DIRAC_ROOTDIR/test/cosci_energy/ci.inp --mol=$DIRAC_ROOTDIR/test/cosci_energy/F.mol
#$PAM --gb=0.8  --ag=1.5  --noarch --inp=$DIRAC/test/cc_energy_and_mp2_dipole/ccsd.inp --mol=$DIRAC/test/cc_energy_and_mp2_dipole/H2O.mol --suffix=openblas_mpi4_out
#$PAM --gb=0.8  --ag=1.5  --noarch --inp=$DIRAC/test/benchmark_cc/cc.inp --mol=$DIRAC/test/benchmark_cc/C2H4Cl2_sta_c2h.mol --suffix=mkl_mpi4_out
#$PAM --gb=0.8  --ag=1.5  --noarch --inp=$DIRAC/test/benchmark_cc/cc.inp --mol=$DIRAC/test/benchmark_cc/C2H4Cl2_sta_c2.mol --suffix=mkl_mpi4_out

## Set number of MPI threads and calculate the number of OpenBLAS threads (max 24)
THISMPI=4
let "NUMTHR=$NPROCS/$THISMPI"
export MKL_NUM_THREADS=$NUMTHR
#export MKL_NUM_THREADS=1
echo -e "\nThis node has $NPROCS CPUs available for this EXCLUSIVE JOB and dirac.x is running via $THISMPI openmpi threads."
echo -e "Therefore, for the MKL internal parallelization, number of calculated threads=$MKL_NUM_THREADS per each openmpi thread.\n"

$PAM  --mpi=$THISMPI  --gb=4.60  --ag=5.00  --noarch --inp=$DIRAC/test/benchmark_cc/cc.inp --mol=$DIRAC/test/benchmark_cc/C2H4Cl2_sta_c2.mol --suffix=i17mkl_mpi$THISMPI-omp$MKL_NUM_THREADS-out


exit
