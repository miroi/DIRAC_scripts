#!/bin/bash

#
#
#  05 00 * * 1,2,3,4,5,6,7  S=/u/milias/Work/qch/software/My_scripts/local_runs/gsi_de/lxir_nodes/dirac/cdash_buildups; $S/cdash.lxir127 > $S/cdash_buildup.log 2>&1
#
#
echo "Is home directory /u/milias available ? ...df -h /u/milias"
df -h /u/milias
ls /u/milias/

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

echo -e "\n Are modules available ?"
ls -l  /etc/profile.d/
. /etc/profile.d/modules.sh
module use /cvmfs/it.gsi.de/modulefiles/
echo -e "...after loading, modules at disposal:"
module avail
echo

module unload compiler/intel/12.1
module unload compiler/intel/15.0
module unload compiler/intel/16.0
module load compiler/intel/17.4
echo -e "\n modules loaded:"
module list

## my installation of Integer*8 OpenMPI:
## milias@lxir127.gsi.de:~/bin/openmpi-i8/openmpi-3.1.0/../configure --prefix=/u/milias/bin/openmpi-i8  F77=ifort FC=ifort FFLAGS=-i8 FCFLAGS=-i8 CXX=icpc CC=icc
export PATH=/u/milias/bin/openmpi-i8/bin:$PATH
export LD_LIBRARY_PATH=/u/milias/bin/openmpi-i8/lib:$LD_LIBRARY_PATH

export CTEST_PROJECT_NAME="DIRAC"

# for RT-checks one needs more time !
export DIRTIMEOUT="30m"

#TMP_DIR=/tmp/milias/DIRAC_builds
TMP_DIR=/tmp/milias-dirac-software/dirac_cloned
#
if [[ -d "$TMP_DIR" ]]; then
  echo -e "\n ...deleting previous clone $TMP_DIR "
  /bin/rm -rf $TMP_DIR
  mkdir -p $TMP_DIR
else
  mkdir -p $TMP_DIR
fi
#
#
git clone --recursive git@gitlab.com:dirac/dirac.git  $TMP_DIR
cd $TMP_DIR
git submodule update --init --recursive

BUILD_OMPI=build_openmpi_intel_mkl_i8_rtcheck
export DIRAC_MPI_COMMAND="mpirun -np 2"

# configure step
echo -e "\n Running DIRAC parallel-RTcheck buildup \n"
python ./setup --mpi --check --fc=mpif90  --cc=mpicc  --cxx=mpicxx --int64  --cmake-options="-D BUILDNAME='lxir127-gsi.de-openmpi-intel-mkl-i8-rtcheck' -D DART_TESTING_TIMEOUT=99999 -D ENABLE_UNIT_TESTS=ON" $BUILD_OMPI
cd $BUILD_OMPI
ctest -V -D ExperimentalUpdate --track Experimental
ctest -V -D ExperimentalConfigure --track Experimental
ctest -VV -j16 -D ExperimentalBuild --track  Experimental
ctest -V -j8 -D ExperimentalTest --track  Experimental
ctest -V -D ExperimentalSubmit --track  Experimental

sleep 60
echo -e "\n Running DIRAC serial-RTcheck buildup \n"
cd $TMP_DIR
echo -e "\n I am in $PWD "
unset DIRAC_MPI_COMMAND
BUILD_SERIAL=build_intel_mkl_i4_rtcheck
# configure step
python ./setup --check --fc=ifort  --cc=icc  --cxx=icpc  --cmake-options="-D BUILDNAME='lxir127-gsi.de-intel-mkl-i4-rtcheck' -D DART_TESTING_TIMEOUT=99999 -D ENABLE_UNIT_TESTS=ON" $BUILD_SERIAL
cd $BUILD_SERIAL
ctest -V  -D ExperimentalConfigure --track Experimental
ctest -VV -j16 -D ExperimentalBuild --track Experimental
ctest -V -j16 -D ExperimentalTest --track Experimental
ctest -V -D ExperimentalSubmit --track Experimental

sleep 60
echo -e "\n Running DIRAC parallel-benchmark buildup \n"
cd $TMP_DIR
echo -e "\n I am in $PWD "
BUILD_OMPI_BENCHMARK=build_openmpi_intel_mkl_i8_xh
export DIRAC_MPI_COMMAND="mpirun -np 4"
python ./setup --mpi --fc=mpif90  --cc=mpicc  --cxx=mpicxx --extra-fc-flags="-xHost" --extra-cc-flags="-xHost" --extra-cxx-flags="-xHost"  --int64  --cmake-options="-D BUILDNAME='lxir127-gsi.de-openmpi-intel-mkl-i8-xh' -D DART_TESTING_TIMEOUT=99999 -D ENABLE_UNIT_TESTS=ON -D ENABLE_TUTORIALS=ON" $BUILD_OMPI_BENCHMARK
cd $BUILD_OMPI_BENCHMARK
ctest -V -D ExperimentalUpdate --track Experimental
ctest -V -D ExperimentalConfigure --track Experimental
ctest -VV -j16 -D ExperimentalBuild --track Experimental
ctest -V -C benchmarks -j4 -D ExperimentalTest --track Experimental
ctest -V -D ExperimentalSubmit --track Experimental


exit 0
